
services:
  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always

  web:
    build: .
    working_dir: /app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  celery:
    build: .
    working_dir: /app
    command: celery -A aviasales worker --loglevel=info
    environment:
      - DJANGO_SETTINGS_MODULE=aviasales.settings
      - PYTHONPATH=/app/avia
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  celery-beat:
    build: .
    working_dir: /app
    command: celery -A aviasales beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DJANGO_SETTINGS_MODULE=aviasales.settings
      - PYTHONPATH=/app/avia
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

volumes:
  postgres_data:
